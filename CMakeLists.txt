cmake_minimum_required(VERSION 3.31)
project(flinux C ASM_MASM)

add_definitions(
    -D_WIN32_WINNT=0x600
    -D_CRT_SECURE_NO_WARNINGS=1
    )

if(MSVC)
    add_compile_options(
         "$<$<CONFIG:Debug>:/Zi>"
         "$<$<CONFIG:Debug>:/MTd>"
         "$<$<CONFIG:RelWithDebInfo>:/MT>"
         "$<$<CONFIG:Release>:/MT>"
         "$<$<CONFIG:MinSizeRel>:/MD>"
         )
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SAFESEH:NO /DYNAMICBASE:NO")
else()
    set(CMAKE_ASM_MASM_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT_Embedded "")
    set(CMAKE_C_FLAGS_DEBUG "")
    foreach(flag
        -Wno-unknown-warning-option
        -Wno-writable-strings
        -Wno-microsoft-goto
        -Wno-microsoft-cast
        -Wno-nonportable-include-path
        -Wno-macro-redefined
        -Wno-invalid-noreturn
        )
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${flag}")
    endforeach()
    set_source_files_properties(
            "src/dbt/x86_trampoline.asm"
            "src/syscall/stubs.asm"
        PROPERTIES COMPILE_OPTIONS
            "-nologo;-coff;-9;-Gd"
        )
    get_filename_component(LLVMPATH "${CMAKE_C_COMPILER}" DIRECTORY)
    get_filename_component(LLVMPATH "${LLVMPATH}" DIRECTORY)
    set(LIBPATH "${LLVMPATH}/i686-w64-mingw32/lib")
endif()

include_directories(
    "${CMAKE_CURRENT_SOURCE_DIR}/src"
    )

add_executable(flinux
    "src/rc/resource1.h"
    "src/binfmt/elf-em.h"
    "src/binfmt/elf.h"
    "src/common/auxvec.h"
    "src/common/dirent.h"
    "src/common/eventpoll.h"
    "src/common/fadvise.h"
    "src/common/fcntl.h"
    "src/common/fs.h"
    "src/common/futex.h"
    "src/common/in.h"
    "src/common/inotify.h"
    "src/common/ioctls.h"
    "src/common/ldt.h"
    "src/common/net.h"
    "src/common/param.h"
    "src/common/poll.h"
    "src/common/prctl.h"
    "src/common/ptrace.h"
    "src/common/resource.h"
    "src/common/sched.h"
    "src/common/select.h"
    "src/common/sigcontext.h"
    "src/common/sigframe.h"
    "src/common/signal.h"
    "src/common/socket.h"
    "src/common/soundcard.h"
    "src/common/stat.h"
    "src/common/statfs.h"
    "src/common/sysinfo.h"
    "src/common/tcp.h"
    "src/common/termios.h"
    "src/common/time.h"
    "src/common/types.h"
    "src/common/errno.h"
    "src/common/mman.h"
    "src/common/uio.h"
    "src/common/utime.h"
    "src/common/utsname.h"
    "src/common/wait.h"
    "src/datetime.h"
    "src/dbt/cpuid.h"
    "src/dbt/x86.h"
    "src/dbt/x86_inst.h"
    "src/flags.h"
    "src/fs/console.h"
    "src/fs/devfs.h"
    "src/fs/dsp.h"
    "src/fs/epollfd.h"
    "src/fs/eventfd.h"
    "src/fs/file.h"
    "src/fs/inotify.h"
    "src/fs/null.h"
    "src/fs/pipe.h"
    "src/fs/procfs.h"
    "src/fs/random.h"
    "src/fs/socket.h"
    "src/fs/sysfs.h"
    "src/fs/virtual.h"
    "src/fs/winfs.h"
    "src/fs/zero.h"
    "src/heap.h"
    "src/lib/core.h"
    "src/lib/list.h"
    "src/lib/rbtree.h"
    "src/lib/slist.h"
    "src/log.h"
    "src/ntdll.h"
    "src/platform.h"
    "src/shared.h"
    "src/str.h"
    "src/syscall/exec.h"
    "src/syscall/fork.h"
    "src/syscall/futex.h"
    "src/syscall/mm.h"
    "src/syscall/process.h"
    "src/syscall/process_info.h"
    "src/syscall/sig.h"
    "src/syscall/syscall.h"
    "src/syscall/syscall_dispatch.h"
    "src/syscall/syscall_table_x86.h"
    "src/syscall/syscall_table_x64.h"
    "src/syscall/timer.h"
    "src/syscall/tls.h"
    "src/syscall/vfs.h"
    "src/version.h"
    "src/vsprintf.h"
    "src/vsscanf.h"
    "src/win7compat.h"
    "src/datetime.c"
    "src/dbt/cpuid.c"
    "src/dbt/x86.c"
    "src/dbt/x86_inst.c"
    "src/dbt/x86_inst_table.c"
    "src/flags.c"
    "src/fs/console.c"
    "src/fs/devfs.c"
    "src/fs/dsp.c"
    "src/fs/epollfd.c"
    "src/fs/eventfd.c"
    "src/fs/inotify.c"
    "src/fs/procfs.c"
    "src/fs/sysfs.c"
    "src/fs/virtual.c"
    "src/fs/null.c"
    "src/fs/pipe.c"
    "src/fs/random.c"
    "src/fs/socket.c"
    "src/fs/winfs.c"
    "src/fs/zero.c"
    "src/heap.c"
    "src/lib/rbtree.c"
    "src/log.c"
    "src/main.c"
    "src/shared.c"
    "src/str.c"
    "src/syscall/exec.c"
    "src/syscall/fork.c"
    "src/syscall/futex.c"
    "src/syscall/mm.c"
    "src/syscall/process.c"
    "src/syscall/sig.c"
    "src/syscall/syscall.c"
    "src/syscall/syscall_dispatch.c"
    "src/syscall/timer.c"
    "src/syscall/tls.c"
    "src/syscall/vfs.c"
    "src/vsprintf.c"
    "src/vsscanf.c"
    "src/wcwidth.c"
    "src/win7compat.c"
    #"src/rc/flinux.rc"
    "src/dbt/x86_trampoline.asm"
    "src/syscall/stubs.asm"
    )

set_directory_properties(
    PROPERTIES
        VS_STARTUP_PROJECT flinux
    )

target_link_libraries(flinux
    "${CMAKE_CURRENT_SOURCE_DIR}/lib/ntdll.lib"
    )

if(MSVC)
    target_link_libraries(flinux
        ws2_32
        winmm
        bcrypt
        psapi
        debug libcmtd
        optimized libcmt
        )
else()
    target_compile_options(flinux PRIVATE
        "$<$<COMPILE_LANGUAGE:C>:-xc++>"
        "$<$<COMPILE_LANGUAGE:C>:-fms-extensions>"
        )
    target_link_libraries(flinux
        "${LIBPATH}/libgcc.a"
        "${LIBPATH}/libgcc_s.a"
        "${LIBPATH}/libwinmm.a"
        "${LIBPATH}/libbcrypt.a"
        "${LIBPATH}/libws2_32.a"
        "${LIBPATH}/libpsapi.a"
        )
endif()
